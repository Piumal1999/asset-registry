name: CI pipeline

on:
  push:
    branches:
      - 'main'
jobs:
  build:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: "3.10"
      - name: Install python dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip3 install -r requirements.txt -r requirements-dev.txt
#      - name: Setup Chrome webdriver
#        uses: nanasess/setup-chromedriver@master
#      - name: Setup Chrome Display
#        run: |
#          sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 & # optional, disables headless mode
#      - name: Test with pytest
#        run: |
#          pytest --verbose --failed-first
#          ls -la
#        env:
#          DISPLAY: :99
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to Registry
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASS }}
      - name: Build docker image
        run: docker build . -t ${{ secrets.DOCKER_REGISTRY }}/asset-app
#      - name: Container image scan
#        uses: Azure/container-scan@v0.1
#        with:
#          image-name: ${{ secrets.DOCKER_REGISTRY }}/asset-app
#        continue-on-error: true
      #        todo change continue-on-error
      - name: Get new Docker image tag
        run: COMMIT_MSG="${{ github.event.head_commit.message }}" python3 utils/docker_tag.py asset-app ${{ secrets.DOCKER_USERNAME }} ${{ secrets.DOCKER_PASS }}
      - name: Print env var
        run: echo ${{ env.DOCKER_IMAGE_TAG }}
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ secrets.DOCKER_REGISTRY }}"/"${{ env.DOCKER_IMAGE_TAG }}
      - name: Checkout the app config repo
        uses: actions/checkout@v2
        if: env.SHOULD_PUSH == 1
        with:
            repository: https://github.com/linux-training-group-1/asset-registry-config
            path: './config'
      - name: ls
        if: env.SHOULD_PUSH == 1
        run: ls config -la




# TODO: create a helm chart
# TODO: fix the k8s deployment
