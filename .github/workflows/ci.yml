name: CI/CD pipeline

on:
  push:
    branches:
      - 'main'

env:
  PROJECT_ID: ${{ secrets.GKE_PROJECT }} # TODO: set this env var on git repo
  GKE_CLUSTER: cluster-1
  GKE_ZONE: asia-south1
  DEPLOYMENT_NAME: gke-test
  GITHUB_SHA: ${{ github.sha }}

jobs:
  build-and-deploy:
    runs-on: ubuntu-20.04
    steps:
      - name: Checkout the code
        uses: actions/checkout@v2
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: "3.8"
      - name: Install python dependencies
        run: |
          python3 -m pip install --upgrade pip
          pip3 install -r requirements.txt -r requirements-dev.txt
      - name: Setup Chrome webdriver
        uses: nanasess/setup-chromedriver@master
      - name: Setup Chrome Display
        run: |
          sudo Xvfb -ac :99 -screen 0 1280x1024x24 > /dev/null 2>&1 & # optional, disables headless mode
      - name: Test with pytest
        run: |
          pytest --verbose --failed-first
          ls -la
        env:
         DISPLAY: :99
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: Login to DockerHub
        uses: docker/login-action@v1
        with:
          registry: ${{ secrets.DOCKER_REGISTRY }}
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASS }}
      - name: Build docker image
        run: docker build . -t ${{ secrets.DOCKER_REGISTRY }}/asset-app
      - name: Container image scan
        uses: Azure/container-scan@v0.1
        with:
          image-name: ${{ secrets.DOCKER_REGISTRY }}/asset-app
        continue-on-error: false
      - name: Build and push
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: ${{ secrets.DOCKER_REGISTRY }}/asset-app
#      - name: k8s schema validation
#        uses: instrumenta/kubeval-action@master
#        with:
#          files: k8s-artifacts
#      - name: Setup gcloud CLI
#        uses: google-github-actions/setup-gcloud@master
#        with:
#          service_account_key: ${{ secrets.GKE_SA_KEY }}
#          project_id: ${{ secrets.GKE_PROJECT }}
#      - name: Install Helm
#        run: |
#          curl https://raw.githubusercontent.com/helm/helm/master/scripts/get-helm-3 | bash
#
#      - name: Get the GKE credentials so we can deploy to the cluster
#        uses: google-github-actions/get-gke-credentials@master
#        with:
#          cluster_name: ${{ env.GKE_CLUSTER }}
#          location: ${{ env.GKE_ZONE }}
#          credentials: ${{ secrets.GKE_SA_KEY }}
#      - name: Deploy to GKE
#        run: |
#          gcloud container clusters get-credentials $GKE_CLUSTER \
#            --zone $GKE_ZONE \
#            --project $GKE_PROJECT
#          helm upgrade $GKE_PROJECT $GKE_PROJECT-cluster/ \
#            --set randocats.image.tag=$GITHUB_SHA \
#            --wait
#          kubectl rollout status deployment/$DEPLOYMENT_NAME
#          kubectl get services -o wide
#
# TODO: create a helm chart
# TODO: fix the k8s deployment
